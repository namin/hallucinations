(setq sys::*utils-directory* "utils/")
(load "utils/utils.lisp")
(compile-and-load "pgm2stream")
(compile-and-load "shiftregister")
(compile-and-load "vision")
(compile-and-load "representation")
(compile-and-load "finger")
;;(compile-and-load "imgstream")

(defun process-img-sequence (sr stem number &optional print-period)
  (let ((ln 0))
    (dotimes (i number)
      (let ((img (pgm-to-row-stream (format nil "~A~A.pgm" stem i))))
	(tick)
	(while (more-rows img)
	  (update-shift-register sr (bits-to-intervals (next-row img)))
	  (incf ln)
	  (when (and print-period (zerop (mod ln print-period)))
	    (format t "Line ~A:~%" ln) (pprint-representation sr)))))))
